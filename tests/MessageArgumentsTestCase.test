<?php

/**
 * Testing the arguments handler for messages.
 */
class MessageArgumentsTestCase extends DrupalWebTestCase {

  /**
   * @var \stdClass
   *
   * The user object.
   */
  protected $user;

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Message arguments',
      'description' => 'Test the Message and arguments handling.',
      'group' => 'Message',
    );
  }

  function setUp() {
    parent::setUp('message');

//    $this->user = $this->drupalCreateUser();
  }

  /**
   * Testing ctools message arguments plugin.
   */
  public function testCtoolsArguments() {
//    $uri = entity_uri('user', $this->user);
    module_enable(array('message_test'));
    message_type_create('message_test_arguments', array('message_text' => array(LANGUAGE_NONE => array(array('value' => 'Example text.')))))->save();
//
    $message = message_create('message_test_arguments', array('uid' => $this->user->uid));
    $message->save();

    if (!$handler = message_get_message_arguments_handler($message)) {
      throw new Exception('No arguments handler was found for the Message example message type.');
    }
//
//    $arguments = $handler->getArguments();
//
//    $expected_arguments = array(
//      '@name' => $this->user->name,
//      '%time' => format_date($message->timestamp),
//      '!link' => l(t('link'), $uri['path'], array('absolute' => TRUE)),
//    );
//
//    // Verify we got the correct arguments.
//    $this->assertEqual($arguments, $expected_arguments, 'The arguments plugin returned the expected values.');
  }

}
